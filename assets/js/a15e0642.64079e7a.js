"use strict";(self.webpackChunk_recative_documents=self.webpackChunk_recative_documents||[]).push([[437],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(n),h=i,u=m["".concat(s,".").concat(h)]||m[h]||p[h]||r;return n?a.createElement(u,o(o({ref:t},d),{},{components:n})):a.createElement(u,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:7002},o="TN7002: Time Synchronization",c={unversionedId:"technotes/tn7002-time-synchronization/index",id:"technotes/tn7002-time-synchronization/index",title:"TN7002: Time Synchronization",description:"Introduction",source:"@site/docs/technotes/tn7002-time-synchronization/index.mdx",sourceDirName:"technotes/tn7002-time-synchronization",slug:"/technotes/tn7002-time-synchronization/",permalink:"/docs/technotes/tn7002-time-synchronization/",draft:!1,editUrl:"https://github.com/recative/recative-system/tree/master/packages/documents/docs/technotes/tn7002-time-synchronization/index.mdx",tags:[],version:"current",sidebarPosition:7002,frontMatter:{sidebar_position:7002},sidebar:"technotes",previous:{title:"TN7001: Audio Management",permalink:"/docs/technotes/tn7001-audio-management/"},next:{title:"TN7003: Resource Management",permalink:"/docs/technotes/tn7003-resource-management/"}},s={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Timeline",id:"timeline",level:3},{value:"Tracks",id:"tracks",level:3},{value:"Integration",id:"integration",level:2}],d={toc:l};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tn7002-time-synchronization"},"TN7002: Time Synchronization"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"For video playback, Recative System split the video file into two different\nfile: the muted video file and the audio file. For most browsers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Muted video files can be played automatically without users' interaction.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"By interactive the page once (click or tap), the ",(0,i.kt)("inlineCode",{parentName:"p"},"AudioContext")," could be\nactivated, then Recative System could play any audio files without any\nlimitation."))),(0,i.kt)("p",null,"So we can achieve unlimited auto play by playing muted video and its sound in\n",(0,i.kt)("inlineCode",{parentName:"p"},"AudioContext"),"."),(0,i.kt)("p",null,"Since they are played with two different Web API, the time of two different\nfiles could be uncoordinated. So we need a tool to synchronize the time of\ndifferent channel."),(0,i.kt)("p",null,"This is managed by the ",(0,i.kt)("a",{parentName:"p",href:"/api/time-schedule"},(0,i.kt)("inlineCode",{parentName:"a"},"@recative/time-schedule")),"."),(0,i.kt)("h2",{id:"architecture"},"Architecture"),(0,i.kt)("h3",{id:"timeline"},"Timeline"),(0,i.kt)("p",null,"For each asset, there is an instance handle all the time synchronization related\ntasks. This timeline will manage audio, video and logic produced by the act\npoint."),(0,i.kt)("h3",{id:"tracks"},"Tracks"),(0,i.kt)("p",null,"Each timeline managed a lot of ",(0,i.kt)("a",{parentName:"p",href:"/api/time-schedule/interface/Track"},"Tracks"),". For\nall type of asset, there is a monitor track:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"AudioTrack"),": Audio track will track the loading and the progress of ",(0,i.kt)("a",{parentName:"p",href:"/docs/technotes/tn7001-audio-management#audio-elements"},"audio elements"),"\nfor most cases, audio tracks would not be synchronized.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"RemoteTrack"),": Remote track will handle general progress management logic\nfor the logic which is hard to abstract, Recative System use Remote Track to\nmanage the progress of video playback and animation of act point.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"MonitorTrack"),": Monitor track do not report any progress, but trigger events\nwhile ",(0,i.kt)("em",{parentName:"p"},"time updated")," and the content ",(0,i.kt)("em",{parentName:"p"},"stuck"),"."))),(0,i.kt)("p",null,"While adding the track to the timeline, developers could specify a priority for\nthat track, while there is out of sync happened, the time of all other tracks\nwill follow the time of the track with the highest priority. This is designed to\nminimize the user's perception while time synchronization happens."),(0,i.kt)("p",null,"Compared to visual information, users are more sensitive to the glitch of\nauditory information, so we tend to give higher priority to audio information\nand adjust the timing of visual components rather than sound when the\ntracks appear uncoordinated."),(0,i.kt)("h2",{id:"integration"},"Integration"),(0,i.kt)("p",null,"Each ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L60"},(0,i.kt)("inlineCode",{parentName:"a"},"ContentInstance")),"\nhave a member called ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L84"},(0,i.kt)("inlineCode",{parentName:"a"},"timeline"))),(0,i.kt)("p",null,"Most tracks will ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L159-L168"},"be added to the timeline"),"\nwhile the asset is initialized, but some track ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L263"},"could be added later"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"AudioTrack"),": Audio track ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L103"},"will be initialized within the constructor of ",(0,i.kt)("inlineCode",{parentName:"a"},"ContentInstance")),".\nThen ",(0,i.kt)("a",{parentName:"p",href:"/api/act-player"},"act player")," will ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/act-player/src/components/Stage/Video.tsx#L242"},"notify"),"\nthe track about the URL and backend of the audio resource by passing the\n",(0,i.kt)("a",{parentName:"p",href:"/api/definitions/interface/IResourceFile"},"definition")," of the file.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"MonitorTrack"),": Monitor track will also be added while the ",(0,i.kt)("inlineCode",{parentName:"p"},"ContentInstance"),"\nis ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L161-L164"},"initializing"),",\nall event listeners about the ",(0,i.kt)("inlineCode",{parentName:"p"},"stuck")," and time ",(0,i.kt)("inlineCode",{parentName:"p"},"update")," event will be bind\nhere.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"RemoteTrack"),": ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/instance.ts#L263"},"The remote track"),"\nwill manage the progress of the video channel and the act point. It is added\nwhile the ",(0,i.kt)("a",{parentName:"p",href:"/docs/technotes/tn9002-episode-core#lifecycle"},"state")," of the asset\nturns to ",(0,i.kt)("inlineCode",{parentName:"p"},"preloading"),". Then the ",(0,i.kt)("inlineCode",{parentName:"p"},"Video")," React component will ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/act-player/src/components/Stage/Video.tsx#L117"},"report stuck"),",\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/act-player/src/components/Stage/Video.tsx#L101"},"unstuck"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/act-player/src/components/Stage/Video.tsx#L327-L328"},"progress and state"),"\nvia the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/dbbd9e210a7dae7d73961ded36f4595866e7b815/packages/core-manager/src/episodeCore.ts#L558"},(0,i.kt)("inlineCode",{parentName:"a"},"functionForComponents")),"\nfor ",(0,i.kt)("a",{parentName:"p",href:"/docs/technotes/tn8001-act-player#:~:text=interface%20implementation"},"interface components"),"."))))}p.isMDXComponent=!0}}]);