"use strict";(self.webpackChunk_recative_documents=self.webpackChunk_recative_documents||[]).push([[672],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:7003},o="TN7003: Resource Management",s={unversionedId:"technotes/tn7003-resource-management/index",id:"technotes/tn7003-resource-management/index",title:"TN7003: Resource Management",description:"Introduction",source:"@site/docs/technotes/tn7003-resource-management/index.mdx",sourceDirName:"technotes/tn7003-resource-management",slug:"/technotes/tn7003-resource-management/",permalink:"/docs/technotes/tn7003-resource-management/",draft:!1,editUrl:"https://github.com/recative/recative-system/tree/master/packages/documents/docs/technotes/tn7003-resource-management/index.mdx",tags:[],version:"current",sidebarPosition:7003,frontMatter:{sidebar_position:7003},sidebar:"technotes",previous:{title:"TN7002: Time Synchronization",permalink:"/docs/technotes/tn7002-time-synchronization/"},next:{title:"TN8001: Act Player: Episode Level Media Playback",permalink:"/docs/technotes/tn8001-act-player/"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Client side resource management",id:"client-side-resource-management",level:2},{value:"Data flow",id:"data-flow",level:3},{value:"Resource selection",id:"resource-selection",level:3},{value:"Configuration Generation",id:"configuration-generation",level:2},{value:"API Usage",id:"api-usage",level:2},{value:"Video",id:"video",level:3},{value:"Interactive program",id:"interactive-program",level:3},{value:"Develop your own interface component",id:"develop-your-own-interface-component",level:3}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tn7003-resource-management"},"TN7003: Resource Management"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"The Reactive System's resource management system provides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Responsive resource loading:")," Developers can configure the application to\nautomatically select resources based on language, platform (e.g. Windows or\nAndroid), and interaction methods (e.g. touch screen or mouse).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Optimized resource loading:")," We offer methods for optimizing resource\nloading on web and mobile platforms, using a priority queue to enhance the\nuser experience.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Resource conversion:")," Automatically create atlas images and convert formats\nfor compatibility.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Resource bundling:")," Create multiple profiles for different deployment\nneeds. For example, when creating a web and mobile app simultaneously,\nresources can be published to different CDNs. The website may not require all\nresources, but the mobile app may benefit from having all resources bundled in\nthe package for better loading performance."))),(0,r.kt)("h2",{id:"client-side-resource-management"},"Client side resource management"),(0,r.kt)("h3",{id:"data-flow"},"Data flow"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/definition"),":")," This package defines the metadata for each\nresource file. Developers can manually write definitions for each file, but it\nis recommended to use Recative Studio to generate them for a more\nuser-friendly interface and ease of management for larger sets of files.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/client-sdk"),":")," If using Recative Studio to generate\nconfigurations, this package can utilize the output and handle data fetching\nand decoding tasks.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/act-player"),":")," If using ",(0,r.kt)("inlineCode",{parentName:"p"},"@recative/client-sdk"),", the player is\nautomatically created. Alternatively, developers can manually pass resource\ndefinitions to the player, which acts as a conduit to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"@recative/core-manager")," for resource management.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/core-manager"),":")," This layer is responsible for managing the\nselection of resources."))),(0,r.kt)("h3",{id:"resource-selection"},"Resource selection"),(0,r.kt)("p",null,"If the developer required a resource group, like a texture. The resource will be\nselected with a weighted score. Recative System will pick the resource with the\nmaximum score as the result resource file."),(0,r.kt)("p",null,"Such tasks is finished by the ",(0,r.kt)("a",{parentName:"p",href:"/api/smart-resource/function/calculateResourceScore"},(0,r.kt)("inlineCode",{parentName:"a"},"@recative/smart-resource"))),(0,r.kt)("p",null,"There are three necessary elements for the resource selection task:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Selector:")," A string with colon, the string before the colon is the group\nname and the string after the colon is the value, here is an example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"category:image\n~~~~~~~~ ~~~~~\nGroup    Value\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Environmental variable configurations: ")," This is the detailed config of\nusers' devices. If you are using the API provided by ",(0,r.kt)("inlineCode",{parentName:"p"},"@recative/core-manager"),",\nthese variables would be specified by the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/a391b0dfbc42a8ccffcec6404dc3e86bb019f12f/packages/core-manager/src/manager/envVariable/EnvVariableManager.ts"},(0,r.kt)("inlineCode",{parentName:"a"},"EnvVariableManager")),"\nwith the following keys:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"lang"),":")," The language of users' devices.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"device"),":")," The input device is a mouse or a touch screen.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"screen"),":")," The screen size is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/a391b0dfbc42a8ccffcec6404dc3e86bb019f12f/packages/core-manager/src/manager/envVariable/utils/screenSize.ts#L1"},"small, medium or large"),"."))))),(0,r.kt)("h2",{id:"configuration-generation"},"Configuration Generation"),(0,r.kt)("p",null,"If developers decide to manage their resource files with the Recative Studio,\nthe configuration will be managed automatically. By importing the resource will\nbe processed by various extensions:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/extension-av"),":")," Splits audio and video files into different\nchannels for the video playback system provided by the Recative System. This\nimproves consistency across all major platforms. The audio file will be\nconverted to fix any possible compatibility issues."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/atlas"),":")," Analyzes the dimensions of textures and packs them into\nan atlas texture to save memory and improve the stability of the application\non mobile platforms."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/extension-audio-backends"),":")," Provides options on the interface\nthat guide the audio system to play audio files in a streamed way even when\nusing the ",(0,r.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API"},"Web Audio API"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"@recative/extension-crowdin"),": ")," Provides scripts for synchronizing\ntranslation files from the Crowdin platform. These files can be used for\ninternationalization purposes.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Although there is currently no way for users of the Recative Studio to add\nthird-party extensions, developers can create a pull request to the code\nrepository and discuss their desired extension with the Recative team."),(0,r.kt)("p",{parentName:"admonition"},"This way, the team can review the proposed solution and potentially implement\nit in the future.")),(0,r.kt)("h2",{id:"api-usage"},"API Usage"),(0,r.kt)("h3",{id:"video"},"Video"),(0,r.kt)("p",null,"The official implementation of the Video component in the Recative Studio\nrequires that the audio and video channels be split into two separate files. The\ncategory tag must be set to video and audio, respectively, for each file. This\nmeans that the group must contain two files, one with the ",(0,r.kt)("inlineCode",{parentName:"p"},"category:audio")," tag\nand the other with the ",(0,r.kt)("inlineCode",{parentName:"p"},"category:video")," tag in its ",(0,r.kt)("a",{parentName:"p",href:"/api/definitions/interface/IResourceFile#tags"},(0,r.kt)("inlineCode",{parentName:"a"},"tags")),"\nfield. This is to ensure that the correct files are used for the video and audio\nchannels during playback."),(0,r.kt)("h3",{id:"interactive-program"},"Interactive program"),(0,r.kt)("p",null,"For developers who is developing your program with ",(0,r.kt)("inlineCode",{parentName:"p"},"PIXI.js"),", here is a\ncomponent provided by the ",(0,r.kt)("inlineCode",{parentName:"p"},"@recative/ap-core"),", here is an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { SmartSprite } from '@recative/ap-core';\n\nconst MyComponent = () => {\n  const nameSprite = new SmartSprite({ label: YOUR_RESOURCE_LABEL });\n\n  nameSprite.anchor.set(0.5);\n  nameSprite.position.set(1082, 174 + i * 80);\n\n  // It is a general PIXI component, so you can add it to some container.\n  // someContainer.addChild(nameSprite);\n};\n")),(0,r.kt)("h3",{id:"develop-your-own-interface-component"},"Develop your own interface component"),(0,r.kt)("p",null,"The ResourceManager provided by episodeCore contains methods that allow\ndevelopers to manually select resources from the episode configuration. here are\nthe example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const matchedResource = props.core\n  .getEpisodeData()\n  ?.episodeData.resources.getResourceByQuery(\n    YOUR_RESOURCE_LABEL,\n    'label',\n    {\n      category: 'subtitle',\n      lang: 'en',\n    },\n    {\n      category: 1e4,\n      lang: 1,\n    }\n  );\n")),(0,r.kt)("p",null,"Please checkout the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/recative/recative-system/blob/feb76e968128289ccde3782dea390e7decc766a1/packages/act-player/src/components/Stage/Video.tsx#L228-L299"},"official implementation"),"\nfor more detail."))}m.isMDXComponent=!0}}]);